# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish docker

on:
  schedule:
    - cron: '39 12 * * *'
  push:
    branches: 
    - 'main'
    tags:
    - '*'

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - name: Log in to Docker Hub
      run: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: gawsoft/aws-node-chrome
    - name: Build the Docker image
      run: |
            
            ACTUAL_NODE_VERSION=`docker run --rm --entrypoint=/bin/sh public.ecr.aws/lambda/nodejs:16 node --version`
            GOOGLE_VERSION=`curl "https://omahaproxy.appspot.com/all.json?os=linux;channel=stable" | jq '.[]' | jq .versions | jq -r '.[0].version'`
            CHECK_VERSION=${ACTUAL_NODE_VERSION}-${GOOGLE_VERSION}-linux
            
            echo "Check ${CHECK_VERSION} exists"
            docker manifest inspect gawsoft/aws-node-chrome:${CHECK_VERSION}

            
            if [[ $? -eq 0]];
            then
              echo "Image with this version exists"
              exit 0
            fi

            echo "Image not exists start deploy"
            docker image build -t aws-node-chrome .
            VERSION=`docker run --name=tmp --rm --entrypoint=/bin/sh aws-node-chrome -c "cat /node-version.txt /chrome-version.txt" | tr '\n' '-'`
            VERSION=${VERSION}linux
            echo $VERSION
            docker container rm --force tmp || true
            docker image tag aws-node-chrome gawsoft/aws-node-chrome:$VERSION
            docker image push gawsoft/aws-node-chrome:$VERSION
            # Publish latest
            docker image tag aws-node-chrome gawsoft/aws-node-chrome:latest
            docker image push gawsoft/aws-node-chrome:latest
        